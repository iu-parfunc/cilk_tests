
## TEMPORARY MAKEFILE FOR IVAR TESTING:

# List the tests:

BIN= \
  ivar1.exe ivar2.exe ivar2B.exe ivar3.exe ivar4.exe ivar5.exe \
  wavefront.exe measure_one_pause.exe \
  microbench_many_blocking.exe \
	deadlock_test.exe \
	deadlock_test2.exe \
  queue_test.exe deadlock_test1.exe deadlock_test3.exe \
	deadlock_test4.exe deadlock_test5.exe nested_deadlock.exe \
	interleaved_read_write.exe

# Disabled presently:
# queue_test_lockfree.exe
# queue_test_tbb.exe

# Optional, this one requires CnC:
# measure_one_pause_cnc.exe  \

OTHER=server_test.exe ivar_server.exe

##================================================================================
# Various variables:

# Debug mode by default for these tests:
ifeq ($(DEBUG),)
  DEBUG=1
endif

# Store compiler ptions that are used by all tests below:
OPTS=

#ifeq (Darwin,$(shell uname))
#  TMPOUT=mac64
#  BUILD=mac-build
#  EXT=dylib
#  OPTS += -lcilkrts 
#  LIBEVENT=/usr/local/lib/libevent-2.0.5.dylib
#  LIBEVENT=/usr/local/lib/libevent.dylib
#else
#  TMPOUT=linux64
#  BUILD=unix-build
#  EXT=so
#  LIBEVENT=/usr/local/lib/libevent-2.0.so
#  LIBEVENT=/usr/local/lib/libevent.so
#endif

# LIBEVENT=/usr/local/lib/libevent-2.0.so.5.1.1

RTSDIR=/nobackup/parfunc/concurrent_cilk
BUILD=gcc-4.7-cilkrts
INCLUDEDIR=$(RTSDIR)/$(BUILD)/include/cilk
EXT=so

# This is the SOURCE include dir, not the build include dir:
# -I$(RTSDIR)/include/
GCC=$(RTSDIR)/$(BUILD)/bin
CC=$(GCC)/gcc -L$(RTSDIR)/$(BUILD)/lib:$(RTSDIR)/$(BUILD)/lib63 -I$(INCLUDEDIR)
CPLUS=$(GCC)/g++ -L$(RTSDIR)/$(BUILD)/lib:$(RTSDIR)/$(BUILD)/lib64 -I$(INCLUDEDIR)

#lib dependencies
LIBDEPS= $(RTSDIR)/$(BUILD)/lib/libcilkrts.$(EXT)
LIBS=$(RTSDIR)/$(BUILD)/lib/:$(RTSDIR)/$(BUILD)/lib64/:$(RTSDIR)/$(BUILD)/libexec/

INCLUDE=$(RTSDIR)/$(BUILD)/include/

ifeq ($(DEBUG),1)  
  OPTS += -g 
  OUT=$(TMPOUT)
else 
#  OPTS += -O3
  OUT=$(TMPOUT)
endif

#FLAGS+= -lcilkrts -lpthread -ldl -O3 -I$(INCLUDE)-L$(LIBS) 
FLAGS+= -lcilkrts -lpthread -ldl -g -ggdb -Wno-int-to-pointer-cast -O3 -I$(INCLUDE)-L$(LIBS) 
CPLUSFLAGS+= -lcilkrts -lpthread -ldl -g -ggdb -fpermissive -O3 -I$(INCLUDE)-L$(LIBS) 



##================================================================================
# Primary entrypoints:

.PHONY: all
all: $(BIN) $(OTHER)
basic: $(BIN) 


.PHONY: test
test: all
	./run_tests.sh $(BIN)
# Next run a simple test oF the server:
	$(MAKE) server_test
	@echo ""
	@echo "All tests finished without errors."

.PHONY: clean
clean:
	rm -f *.exe

##================================================================================
# Build each test:

# Slightly different options are required in some cases, so these are
# listed out longhand:

ivar1.exe: ivar1.c $(LIBDEPS)
	$(CC) $< -o $@ $(OPTS) $(FLAGS)

ivar2.exe: ivar2.c $(LIBDEPS)
	$(CC) $< -o $@ $(OPTS) $(FLAGS)

ivar2B.exe: ivar2B.c $(LIBDEPS)
	$(CC) $< -o $@ $(OPTS) $(FLAGS)

ivar3.exe: ivar3.cpp $(LIBDEPS)
	$(CPLUS) $< -o $@ $(OPTS) $(CPLUSFLAGS)

ivar4.exe: ivar4.cpp $(LIBDEPS)
	$(CPLUS) $< -o $@ $(OPTS) $(CPLUSFLAGS)

ivar5.exe: ivar5.c $(LIBDEPS)
	$(CC) $< -o $@ $(OPTS) $(FLAGS)

nested_deadlock.exe: nested_deadlock.c $(LIBDEPS)
	$(CC) $< -o $@ $(OPTS) $(FLAGS)

deadlock_test.exe: deadlock_test.c $(LIBDEPS)
	$(CC) $< -o $@ $(OPTS) $(FLAGS)

deadlock_test1.exe: deadlock_test1.c $(LIBDEPS)
	$(CC) $< -o $@ $(OPTS) $(FLAGS)

deadlock_test2.exe: deadlock_test2.c $(LIBDEPS)
	$(CC) $< -o $@ $(OPTS) $(FLAGS)

deadlock_test3.exe: deadlock_test3.cpp $(LIBDEPS)
	$(CPLUS) $< -o $@ $(OPTS) $(CPLUSFLAGS)

deadlock_test4.exe: deadlock_test4.cpp $(LIBDEPS)
	$(CPLUS) $< -o $@ $(OPTS) $(CPLUSFLAGS)

deadlock_test5.exe: deadlock_test5.c $(LIBDEPS)
	$(CC) $< -o $@ $(OPTS) $(FLAGS)

microbench.exe: microbench.c $(LIBDEPS)
	$(CC) $< -o $@ $(OPTS) $(FLAGS)

interleaved_read_write.exe: interleaved_read_write.c $(LIBDEPS)
	$(CC) $< -o $@ $(OPTS) $(FLAGS)

wavefront.exe: wavefront.cpp $(LIBDEPS)
	$(CPLUS) $< -o $@ $(OPTS) $(CPLUSFLAGS) 

queue_test.exe: queue_test.c $(LIBDEPS) $(RTSDIR)/$(BUILD)/include/cilk/concurrent_queue.h
	$(CC) $< -o $@ $(OPTS) -ltbbmalloc $(FLAGS)

queue_test_lockfree.exe: queue_test.c $(LIBDEPS) $(RTSDIR)/$(BUILD)/include/cilk/concurrent_queue.h
	$(CC) -DLOCKFREE_QUEUE_VERSION $< -o $@ $(OPTS) -ltbbmalloc $(FLAGS)

queue_test_tbb.exe: queue_test.c $(LIBDEPS) $(RTSDIR)/$(BUILD)/include/cilk/concurrent_queue.h
#	$(CC) -x c++ -DTBB_QUEUE_VERSION $< -o $@ $(OPTS) -I../cilkrts/include/ -lcilkrts -ltbbmalloc -ltbb
	$(CC) -x c++ -DTBB_QUEUE_VERSION $< -o $@ $(OPTS) -ltbbmalloc -ltbb $(FLAGS)

server_test.exe: server_test.c $(LIBDEPS) server_driver.exe
	$(CC) $< -o $@ $(OPTS) -I../cilkrts/include/ -levent -lcilkrts $(LIBEVENT)

ivar_server.exe: ivar_server.c $(LIBDEPS) server_driver.exe
	$(CC) $< -o $@ $(OPTS) -I../cilkrts/include/ -levent -lcilkrts $(LIBEVENT)

server_driver.exe: server_driver.c $(LIBDEPS)
	$(CC) $< -o $@ $(OPTS) $(FLAGS)

httperf:
	httperf --server=localhost --port=5002 --uri=/ --num-conns=10000

measure_one_pause.exe: measure_one_pause.cpp $(LIBDEPS)
	$(CPLUS) $< -o $@  $(OPTS) $(CPLUSFLAGS)

# TBB_ARCH_PLATFORM=ia32/cc4.0.1_os10.4.9/
# TBB_ARCH_PLATFORM= intel64/cc4.1.0_libc2.4_kernel2.6.16.21
ARCH=ia32 
TMP= -m32

measure_one_pause_cnc.exe: measure_one_pause_cnc.cpp 
#	$(CC) $< -o $@  $(OPTS) -O3
	$(CC) $(TMP) -O $< -o $@ -I$(TBB)/include -I$(CNCROOT)/distro/include -L$(TBB)/$(TBB_ARCH_PLATFORM)/lib -L$(CNCROOT)/distro/lib/$(ARCH) -lcnc -ltbb -ltbbmalloc

# g++ -m32 -o FindPrimes_NewApi FindPrimes_NewApi.o -L/Users/rrnewton/tbb/2.2/  lib -L/Users/rrnewton/cnc_git/distro/lib/ia32 -lcnc -ltbb_debug -ltbbmalloc_debug 
#  -DDEBUG_KERNEL_ORIENTED=0 

microbench_many_blocking.exe: microbench_many_blocking.cpp $(LIBDEPS)
	$(CPLUS) $< -o $@ $(OPTS) $(CPLUSFLAGS)

server_test:
	@echo ""
	@echo "RUNNING SERVER TEST"
	@echo "================================================================================"
	(./server_test.exe &);
	sleep 1; 
	httperf --server=localhost --port=5002 --uri=/ --num-conns=10


##================================================================================
# Temp / Convenience:

# pfib_cilk_icc.exe: pfib_cilk_icc.cpp $(LIBDEPS)
# 	$(CC) pfib_cilk_icc.cpp -o pfib_cilk_icc.exe $(OPTS)

# Rebuild the library:
# Take care to re-copy all the headers in case they have changed!
# (The normal makefile does not take care of this.)
lib:
	rm -rf $(RTSDIR)/mac-build/include $(RTSDIR)/unix-build/include
	(cd $(RTSDIR); make OUT=$(OUT) runtime -j)

cleanlib:
	(cd $(RTSDIR); make OUT=$(OUT) clean; make OUT=$(OUT) runtime -j)

#CSZ: added for convenience
runbasic: ivar1.exe ivar2.exe ivar2B.exe ivar3.exe ivar4.exe ivar5.exe
	./run_tests.sh ivar1.exe ivar2.exe ivar2B.exe ivar3.exe ivar4.exe ivar5.exe

#TZ: added for conveneience:
rundeadlock: deadlock_test1.exe deadlock_test.exe deadlock_test2.exe deadlock_test3.exe deadlock_test4.exe deadlock_test5.exe
	./run_tests.sh deadlock_test1.exe deadlock_test.exe deadlock_test2.exe deadlock_test3.exe deadlock_test4.exe deadlock_test5.exe

runall: 
	./run_tests.sh ivar1.exe ivar2.exe ivar2B.exe ivar3.exe ivar4.exe ivar5.exe \
		deadlock_test1.exe deadlock_test.exe deadlock_test2.exe deadlock_test3.exe deadlock_test4.exe deadlock_test5.exe



