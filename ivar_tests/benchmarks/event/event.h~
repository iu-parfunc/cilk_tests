// Header file for the event library for c++
#ifndef EVENT_H
#define EVENT_H
#include <cilk/common.h>
#include <cilk/cilk.h>
#include "event_cilk.h"
// MAke sure that event system is ported correctly to c++

template<typename T>
class event
{
  public:
    
    int event() { event_init(); } 
    
    ~event() { destroy_event(e); }
    
    void create() { event_create(); }
    
    int add_event_dep(event *e_add){
      return event_ctl(e->self, e_add->self, ADD);
    }

    int remove_event_dep(event *e_remove){
      return event_ctl(e->self, e_remove->self, DEL);
    }

    int fulfill(T data){
      return event_fire(e->self, (event_data_t *)data);
    }

    ivar_payload_t wait(){
      return event_wait(e->self);
    }

    ivar_payload_t wait_nodeps(){
      return event_wait_nodeps(e->self);
    }

    void destroy(){
      destroy_event(e->self);
    }

  private:
    event *e;
};

#endif
